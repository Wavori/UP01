import xml.etree.ElementTree as ET
import wave
import sqlite3

def modify_xml(file_path):
    """Модифицирует XML-файл."""
    tree = ET.parse(file_path)
    root = tree.getroot()

    print("Текущее содержимое XML:")
    ET.dump(root)

    for elem in root.iter('item'):
        elem.set('price', '100')
        elem.text = 'Modified Item'

    tree.write(file_path)
    print("XML успешно изменен.")

def create_modify_wav(file_path):
    """Создает и модифицирует WAV-файл."""
    sample_rate = 44100.0
    duration = 2.0
    freq = 440.0

    with wave.open(file_path, 'w') as f:
        n_channels = 1
        sampwidth = 2
        n_frames = int(sample_rate * duration)
        comptype = "NONE"
        compname = "not compressed"
        f.setparams((n_channels, sampwidth, int(sample_rate), n_frames, comptype, compname))

        for i in range(int(n_frames)):
            sample = 32767.0 * float(i) / n_frames
            sample = int(sample * 2 * (i % sample_rate) / sample_rate)
            f.writeframes(sample.to_bytes(sampwidth, 'little'))

    print("WAV-файл успешно создан.")

def modify_sqlite(db_path):
    """Считывает и модифицирует информацию в базе данных SQLite."""
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            name TEXT NOT NULL,
            age INTEGER
        )
    ''')

    cursor.execute('INSERT INTO users (name, age) VALUES (?, ?)', ('Alice', 30))
    cursor.execute('INSERT INTO users (name, age) VALUES (?, ?)', ('Bob', 25))

    cursor.execute('UPDATE users SET age = ? WHERE name = ?', (31, 'Alice'))

    cursor.execute('SELECT * FROM users')
    rows = cursor.fetchall()
    print("Текущие данные в таблице users:")
    for row in rows:
        print(row)

    conn.commit()
    conn.close()

def main():
    # Пример использования функций
    modify_xml('example.xml')
    create_modify_wav('example.wav')
    modify_sqlite('example.db')

if __name__ == "__main__":
    main()
