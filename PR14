import tkinter as tk
from tkinter import ttk

# 5.1 Форма авторизации
def create_login_form():
    login_window = tk.Toplevel(root)
    login_window.title("Форма авторизации")
    login_window.geometry("200x300")

    tk.Label(login_window, text="Логин").pack()
    login_entry = tk.Entry(login_window)
    login_entry.pack()

    tk.Label(login_window, text="Пароль").pack()
    password_entry = tk.Entry(login_window, show="*")
    password_entry.pack()

    remember_me = tk.BooleanVar()
    tk.Checkbutton(login_window, text="Запомнить пароль", variable=remember_me).pack()

    tk.Button(login_window, text="Авторизоваться").pack()

# 5.2 Форма регистрации
def create_registration_form():
    registration_window = tk.Toplevel(root)
    registration_window.title("Форма регистрации")
    registration_window.configure(bg="lightgrey")

    tk.Label(registration_window, text="Логин").pack()
    login_entry = tk.Entry(registration_window)
    login_entry.pack()

    tk.Label(registration_window, text="Пароль").pack()
    password_entry = tk.Entry(registration_window, show="*")
    password_entry.pack()

    tk.Label(registration_window, text="О себе").pack()
    about_text = tk.Text(registration_window, height=5)
    about_text.pack()

    tk.Label(registration_window, text="Пол").pack()
    gender = tk.StringVar()
    ttk.Radiobutton(registration_window, text="Мужской", variable=gender, value="Мужской").pack()
    ttk.Radiobutton(registration_window, text="Женский", variable=gender, value="Женский").pack()

    tk.Label(registration_window, text="Материк").pack()
    continents = ["Африка", "Антарктида", "Азия", "Европа", "Северная Америка", "Южная Америка", "Австралия"]
    continent_var = tk.StringVar()
    continent_menu = ttk.OptionMenu(registration_window, continent_var, continents[0], *continents)
    continent_menu.pack()

    tk.Button(registration_window, text="Зарегистрироваться").pack()

# 5.3 Привязка виджетов к переменным
def create_variable_binding_form():
    binding_window = tk.Toplevel(root)
    binding_window.title("Привязка виджетов")

    input_var = tk.StringVar()
    check_var = tk.BooleanVar()
    radio_var = tk.StringVar()

    tk.Entry(binding_window, textvariable=input_var).pack()
    tk.Checkbutton(binding_window, text="Флажок", variable=check_var).pack()
    ttk.Radiobutton(binding_window, text="Опция 1", variable=radio_var, value="Опция 1").pack()
    ttk.Radiobutton(binding_window, text="Опция 2", variable=radio_var, value="Опция 2").pack()

    def update_label():
        label_var.set(f"{input_var.get()}, {check_var.get()}, {radio_var.get()}")

    label_var = tk.StringVar()
    tk.Label(binding_window, textvariable=label_var).pack()

    tk.Button(binding_window, text="Обновить", command=update_label).pack()

# 5.4 Меню с командами
def create_menu_app():
    menu_window = tk.Toplevel(root)
    menu_window.title("Меню")

    def set_color(color):
        menu_window.configure(bg=color)

    def set_size(size):
        menu_window.geometry(size)

    menu = tk.Menu(menu_window)
    menu_window.config(menu=menu)

    color_menu = tk.Menu(menu, tearoff=0)
    menu.add_cascade(label="Color", menu=color_menu)
    color_menu.add_command(label="Red", command=lambda: set_color("red"), accelerator="Ctrl+R")
    color_menu.add_command(label="Green", command=lambda: set_color("green"), accelerator="Ctrl+G")
    color_menu.add_command(label="Blue", command=lambda: set_color("blue"), accelerator="Ctrl+B")

    size_menu = tk.Menu(menu, tearoff=0)
    menu.add_cascade(label="Size", menu=size_menu)
    size_menu.add_command(label="500x500", command=lambda: set_size("500x500"), accelerator="Ctrl+1")
    size_menu.add_command(label="700x400", command=lambda: set_size("700x400"), accelerator="Ctrl+2")

    menu_window.bind_all("<Control-r>", lambda event: set_color("red"))
    menu_window.bind_all("<Control-g>", lambda event: set_color("green"))
    menu_window.bind_all("<Control-b>", lambda event: set_color("blue"))
    menu_window.bind_all("<Control-1>", lambda event: set_size("500x500"))
    menu_window.bind_all("<Control-2>", lambda event: set_size("700x400"))

# Основное окно
root = tk.Tk()
root.withdraw()  # Скрываем основное окно

create_login_form()
create_registration_form()
create_variable_binding_form()
create_menu_app()

root.mainloop()
